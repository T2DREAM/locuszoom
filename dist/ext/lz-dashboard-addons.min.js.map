{"version":3,"sources":["lz-dashboard-addons.min.js"],"names":["root","factory","define","amd","LocusZoom","module","exports","require","this","covariates_model_association","covariates_model_plot_dashboard","Dashboard","Components","add","layout","Component","apply","arguments","initialize","parent_plot","state","model","covariates","CovariatesModel","button","element_reference","element","JSON","parse","stringify","html","toHTML","toString","i","length","push","applyState","updateComponent","bind","removeByIdx","idx","Error","splice","removeAll","update","menu","Button","setColor","color","setHtml","button_html","setTitle","button_title","setOnclick","populate","setPopulate","selector","inner_selector","append","table","forEach","covariate","row","attr","style","margin-left","on","preUpdate","cov","disable","show","parent_panel","data_layer_ids_by_z_index","slice","reverse","id","data_layer","data_layers","name","statuses","status_adj","onclick","highlight","status_idx","DataLayer","Statuses","adjectives","indexOf","status_verb","verbs","global_statuses","menu_antiverbs","at_top","at_bottom","td","moveDown","moveUp","confirm","parent","removeDataLayer","Layouts","get","unnamespaced","components","type","position"],"mappings":"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","file":"lz-dashboard-addons.min.js","sourcesContent":["/**\n * Optional LocusZoom extension: must be included separately, and after LocusZoom has been loaded\n *\n * This contains (reusable) code to power some (rarely used) demo features:\n *  - The \"covariates model\" demo, in which an LZ dashboard widget is populated\n *    with information by selecting points on the plot (see \"covariates model\" demo)\n *  - The \"data layers\" button, which allows fine control over multiple data layers shown in the same panel\n *    (show/hide, fade, change order, etc). This is powerful, but rarely used because showing many datasets in a small\n *    space is hard to read. (see \"multiple phenotypes layered\" demo)\n */\n'use strict';\n\n// This is defined as a UMD module, to work with multiple different module systems / bundlers\n/* global define, module, require */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['locuszoom'], function(LocusZoom) {  // amd\n            return factory(LocusZoom);\n        });\n    } else if(typeof module === 'object' && module.exports) {  // commonJS\n        module.exports = factory(require('locuszoom'));\n    } else {  // globals\n        factory(root.LocusZoom);\n    }\n}(this, function(LocusZoom) {\n    /**\n     * Special button/menu to allow model building by tracking individual covariants. Will track a list of covariate\n     *   objects and store them in the special `model.covariates` field of plot `state`.\n     * @class LocusZoom.Dashboard.Components.covariates_model\n     * @augments LocusZoom.Dashboard.Component\n     * @param {object} layout\n     * @param {string} layout.button_html The HTML to render inside the button\n     * @param {string} layout.button_title Text to display as a tooltip when hovering over the button\n     */\n    LocusZoom.Dashboard.Components.add('covariates_model', function(layout) {\n        LocusZoom.Dashboard.Component.apply(this, arguments);\n\n        this.initialize = function() {\n            // Initialize state.model.covariates\n            this.parent_plot.state.model = this.parent_plot.state.model || {};\n            this.parent_plot.state.model.covariates = this.parent_plot.state.model.covariates || [];\n            // Create an object at the plot level for easy access to interface methods in custom client-side JS\n            /**\n             * When a covariates model dashboard element is present, create (one) object at the plot level that exposes\n             *   component data and state for custom interactions with other plot elements.\n             * @class LocusZoom.Plot.CovariatesModel\n             */\n            this.parent_plot.CovariatesModel = {\n                /** @member {LocusZoom.Dashboard.Component.Button} */\n                button: this,\n                /**\n                 * Add an element to the model and show a representation of it in the dashboard component menu. If the\n                 *   element is already part of the model, do nothing (to avoid adding duplicates).\n                 * When plot state is changed, this will automatically trigger requests for new data accordingly.\n                 * @param {string|object} element_reference Can be any value that can be put through JSON.stringify()\n                 *   to create a serialized representation of itself.\n                 */\n                add: function(element_reference) {\n                    var element = JSON.parse(JSON.stringify(element_reference));\n                    if (typeof element_reference == 'object' && typeof element.html != 'string') {\n                        element.html = ( (typeof element_reference.toHTML == 'function') ? element_reference.toHTML() : element_reference.toString());\n                    }\n                    // Check if the element is already in the model covariates array and return if it is.\n                    for (var i = 0; i < this.state.model.covariates.length; i++) {\n                        if (JSON.stringify(this.state.model.covariates[i]) === JSON.stringify(element)) {\n                            return this;\n                        }\n                    }\n                    this.state.model.covariates.push(element);\n                    this.applyState();\n                    this.CovariatesModel.updateComponent();\n                    return this;\n                }.bind(this.parent_plot),\n                /**\n                 * Remove an element from `state.model.covariates` (and from the dashboard component menu's\n                 *  representation of the state model). When plot state is changed, this will automatically trigger\n                 *  requests for new data accordingly.\n                 * @param {number} idx Array index of the element, in the `state.model.covariates array`.\n                 */\n                removeByIdx: function(idx) {\n                    if (typeof this.state.model.covariates[idx] == 'undefined') {\n                        throw new Error('Unable to remove model covariate, invalid index: ' + idx.toString());\n                    }\n                    this.state.model.covariates.splice(idx, 1);\n                    this.applyState();\n                    this.CovariatesModel.updateComponent();\n                    return this;\n                }.bind(this.parent_plot),\n                /**\n                 * Empty the `state.model.covariates` array (and dashboard component menu representation thereof) of all\n                 *  elements. When plot state is changed, this will automatically trigger requests for new data accordingly\n                 */\n                removeAll: function() {\n                    this.state.model.covariates = [];\n                    this.applyState();\n                    this.CovariatesModel.updateComponent();\n                    return this;\n                }.bind(this.parent_plot),\n                /**\n                 * Manually trigger the update methods on the dashboard component's button and menu elements to force\n                 *   display of most up-to-date content. Can be used to force the dashboard to reflect changes made, eg if\n                 *   modifying `state.model.covariates` directly instead of via `plot.CovariatesModel`\n                 */\n                updateComponent: function() {\n                    this.button.update();\n                    this.button.menu.update();\n                }.bind(this)\n            };\n        }.bind(this);\n\n        this.update = function() {\n\n            if (this.button) { return this; }\n\n            this.button = new LocusZoom.Dashboard.Component.Button(this)\n                .setColor(layout.color)\n                .setHtml(layout.button_html)\n                .setTitle(layout.button_title)\n                .setOnclick(function() {\n                    this.button.menu.populate();\n                }.bind(this));\n\n            this.button.menu.setPopulate(function() {\n                var selector = this.button.menu.inner_selector;\n                selector.html('');\n                // General model HTML representation\n                if (typeof this.parent_plot.state.model.html != 'undefined') {\n                    selector.append('div').html(this.parent_plot.state.model.html);\n                }\n                // Model covariates table\n                if (!this.parent_plot.state.model.covariates.length) {\n                    selector.append('i').html('no covariates in model');\n                } else {\n                    selector.append('h5').html('Model Covariates (' + this.parent_plot.state.model.covariates.length + ')');\n                    var table = selector.append('table');\n                    this.parent_plot.state.model.covariates.forEach(function(covariate, idx) {\n                        var html = ( (typeof covariate == 'object' && typeof covariate.html == 'string') ? covariate.html : covariate.toString() );\n                        var row = table.append('tr');\n                        row.append('td').append('button')\n                            .attr('class', 'lz-dashboard-button lz-dashboard-button-' + this.layout.color)\n                            .style({ 'margin-left': '0em' })\n                            .on('click', function() {\n                                this.parent_plot.CovariatesModel.removeByIdx(idx);\n                            }.bind(this))\n                            .html('×');\n                        row.append('td').html(html);\n                    }.bind(this));\n                    selector.append('button')\n                        .attr('class', 'lz-dashboard-button lz-dashboard-button-' + this.layout.color)\n                        .style({ 'margin-left': '4px' }).html('× Remove All Covariates')\n                        .on('click', function() {\n                            this.parent_plot.CovariatesModel.removeAll();\n                        }.bind(this));\n                }\n            }.bind(this));\n\n            this.button.preUpdate = function() {\n                var html = 'Model';\n                if (this.parent_plot.state.model.covariates.length) {\n                    var cov = this.parent_plot.state.model.covariates.length > 1 ? 'covariates' : 'covariate';\n                    html += ' (' + this.parent_plot.state.model.covariates.length + ' ' + cov + ')';\n                }\n                this.button.setHtml(html).disable(false);\n            }.bind(this);\n\n            this.button.show();\n\n            return this;\n        };\n    });\n\n    /**\n     * Menu for manipulating multiple data layers in a single panel: show/hide, change order, etc.\n     * @class LocusZoom.Dashboard.Components.data_layers\n     * @augments LocusZoom.Dashboard.Component\n     */\n    LocusZoom.Dashboard.Components.add('data_layers', function(layout) {\n        LocusZoom.Dashboard.Component.apply(this, arguments);\n\n        this.update = function() {\n\n            if (typeof layout.button_html != 'string') { layout.button_html = 'Data Layers'; }\n            if (typeof layout.button_title != 'string') { layout.button_title = 'Manipulate Data Layers (sort, dim, show/hide, etc.)'; }\n\n            if (this.button) { return this; }\n\n            this.button = new LocusZoom.Dashboard.Component.Button(this)\n                .setColor(layout.color)\n                .setHtml(layout.button_html)\n                .setTitle(layout.button_title)\n                .setOnclick(function() {\n                    this.button.menu.populate();\n                }.bind(this));\n\n            this.button.menu.setPopulate(function() {\n                this.button.menu.inner_selector.html('');\n                var table = this.button.menu.inner_selector.append('table');\n                this.parent_panel.data_layer_ids_by_z_index.slice().reverse().forEach(function(id, idx) {\n                    var data_layer = this.parent_panel.data_layers[id];\n                    var name = (typeof data_layer.layout.name != 'string') ? data_layer.id : data_layer.layout.name;\n                    var row = table.append('tr');\n                    // Layer name\n                    row.append('td').html(name);\n                    // Status toggle buttons\n                    layout.statuses.forEach(function(status_adj) {\n                        var status_idx = LocusZoom.DataLayer.Statuses.adjectives.indexOf(status_adj);\n                        var status_verb = LocusZoom.DataLayer.Statuses.verbs[status_idx];\n                        var html, onclick, highlight;\n                        if (data_layer.global_statuses[status_adj]) {\n                            html = LocusZoom.DataLayer.Statuses.menu_antiverbs[status_idx];\n                            onclick = 'un' + status_verb + 'AllElements';\n                            highlight = '-highlighted';\n                        } else {\n                            html = LocusZoom.DataLayer.Statuses.verbs[status_idx];\n                            onclick = status_verb + 'AllElements';\n                            highlight = '';\n                        }\n                        row.append('td').append('a')\n                            .attr('class', 'lz-dashboard-button lz-dashboard-button-' + this.layout.color + highlight)\n                            .style({ 'margin-left': '0em' })\n                            .on('click', function() { data_layer[onclick](); this.button.menu.populate(); }.bind(this))\n                            .html(html);\n                    }.bind(this));\n                    // Sort layer buttons\n                    var at_top = (idx === 0);\n                    var at_bottom = (idx === (this.parent_panel.data_layer_ids_by_z_index.length - 1));\n                    var td = row.append('td');\n                    td.append('a')\n                        .attr('class', 'lz-dashboard-button lz-dashboard-button-group-start lz-dashboard-button-' + this.layout.color + (at_bottom ? '-disabled' : ''))\n                        .style({ 'margin-left': '0em' })\n                        .on('click', function() { data_layer.moveDown(); this.button.menu.populate(); }.bind(this))\n                        .html('▾').attr('title', 'Move layer down (further back)');\n                    td.append('a')\n                        .attr('class', 'lz-dashboard-button lz-dashboard-button-group-middle lz-dashboard-button-' + this.layout.color + (at_top ? '-disabled' : ''))\n                        .style({ 'margin-left': '0em' })\n                        .on('click', function() { data_layer.moveUp(); this.button.menu.populate(); }.bind(this))\n                        .html('▴').attr('title', 'Move layer up (further front)');\n                    td.append('a')\n                        .attr('class', 'lz-dashboard-button lz-dashboard-button-group-end lz-dashboard-button-red')\n                        .style({ 'margin-left': '0em' })\n                        .on('click', function() {\n                            if (confirm('Are you sure you want to remove the ' + name + ' layer? This cannot be undone!')) {\n                                data_layer.parent.removeDataLayer(id);\n                            }\n                            return this.button.menu.populate();\n                        }.bind(this))\n                        .html('×').attr('title', 'Remove layer');\n                }.bind(this));\n                return this;\n            }.bind(this));\n\n            this.button.show();\n\n            return this;\n        };\n    });\n\n    LocusZoom.Layouts.add('tooltip', 'covariates_model_association', function () {\n        var covariates_model_association = LocusZoom.Layouts.get('tooltip', 'standard_association', { unnamespaced: true });\n        covariates_model_association.html += '<a href=\"javascript:void(0);\" onclick=\"LocusZoom.getToolTipPlot(this).CovariatesModel.add(LocusZoom.getToolTipData(this));\">Condition on Variant</a><br>';\n        return covariates_model_association;\n    }());\n\n    LocusZoom.Layouts.add('dashboard', 'covariates_model_plot', function () {\n        var covariates_model_plot_dashboard = LocusZoom.Layouts.get('dashboard', 'standard_plot', { unnamespaced: true });\n        covariates_model_plot_dashboard.components.push({\n            type: 'covariates_model',\n            button_html: 'Model',\n            button_title: 'Show and edit covariates currently in model',\n            position: 'left'\n        });\n        return covariates_model_plot_dashboard;\n    }());\n\n    // Public interface for this extension\n    return {};\n}));\n"]}