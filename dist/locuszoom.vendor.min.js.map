{"version":3,"sources":["d3.js","q.js"],"names":["d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","definition","bootstrap","ses","ok","makeQ","global","previousQ","Q","noConflict","uncurryThis","isObject","isStopIteration","exception","object_toString","QReturnValue","makeStackTraceLong","promise","hasStacks","STACK_JUMP_SEPARATOR","stacks","concatedStacks","filterStackString","stackString","desiredLines","isInternalFrame","isNodeFrame","stackLine","getFileNameAndLineNumber","attempt1","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qFileName","qStartingLine","qEndingLine","captureLine","firstLine","deprecate","alternative","console","warn","Promise","isPromiseAlike","coerce","fulfill","defer","become","newPromise","resolvedPromise","array_reduce","messages","undefined","message","nextTick","promiseDispatch","progressListeners","deferred","object_create","resolve","op","operands","array_slice","nearerValue","nearer","isPromise","inspect","state","longStackSupport","reject","reason","notify","progressListener","resolver","TypeError","race","answerPs","len","descriptor","fallback","inspected","when","fulfilled","rejected","progressed","isPending","isFulfilled","isRejected","resetUnhandledRejections","unhandledReasons","unhandledRejections","trackUnhandledRejections","trackRejection","process","emit","runAfter","array_indexOf","reportedUnhandledRejections","untrackRejection","at","atReport","rejection","rhs","delete","post","thisp","object_keys","master","isDef","spread","async","makeGenerator","continuer","verb","arg","StopIteration","generator","done","errback","spawn","_return","promised","all","promises","pendingCount","snapshot","any","prev","onFulfilled","onRejected","onProgress","allResolved","array_map","noop","allSettled","nodeify","nodeback","task","head","runSingle","laterQueue","flushing","isNodeJS","tail","requestTick","setImmediate","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","collect","Type","object_hasOwnProperty","ReturnValue","env","Q_DEBUG","makeNodeResolver","passByCopy","makePromise","_fulfilled","_rejected","newException","_progressed","newValue","threw","tap","fcall","thenResolve","thenReject","getUnhandledReasons","stopUnhandledRejectionTracking","del","mapply","mcall","invoke","fapply","fbind","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","nmapply","npost","nsend","nmcall","ninvoke"],"mappings":"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","file":"locuszoom.vendor.min.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n"]}